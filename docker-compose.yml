version: "3.7"
services:
  web:
    build: web
    restart: always
    ports:
      - "8000"
    expose:
      - "8000"
    environment:
      - DEBUG=0
    networks:
      - sms_network
    volumes:
      - ./web:/code
    depends_on:
      - db
      - redis_server
  # scheduler:
  #   build: scheduler
  #   # restart: always
  #   networks:
  #     - sms_network
  #   volumes:
  #     - ./scheduler:/code
  #   depends_on:
  #     - db
  proxy:
    build: proxy
    restart: always
    ports:
      - 80:80
    networks:
      - sms_network
  db:
    build: db
    restart: always
    ports:
      - 3306:3306
    networks:
      - sms_network
    environment:
      - MYSQL_ROOT_PASSWORD=S3cret
      - MYSQL_PASSWORD=An0thrS3crt
      - MYSQL_USER=citizix_user
      - MYSQL_DATABASE=sms
    volumes:
      - mysql_data:/var/lib/mysql
    cap_add:
    - SYS_NICE  # CAP_SYS_NICE
  
  # Worker
  worker:
    build:
      dockerfile: DockerfileCelery
      context: web
    environment:
      REDISSERVER: redis://redis_server:6379
      C_FORCE_ROOT: "true"
    depends_on:
      - redis_server
    volumes:
      - ./web:/code
    networks:
      - sms_network
    
  
  # Queue & result backend
  redis_server:
    image: redis
    networks:
      - sms_network
    restart: always
    ports:
      - "6379:6379"

  flower:
    image: mher/flower
    command: ["celery", "--broker=redis://redis_server:6379","flower", "--port=5555"]
    # celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis_server
    networks:
      - sms_network


  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - sms_network
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - sms_network

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "50000:50000/udp"
      - "50000:50000/tcp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - sms_network
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - sms_network
    depends_on:
      - elasticsearch

networks:
  sms_network:

volumes:
  mysql_data:
  web:
  # scheduler:
  setup:
  elasticsearch:
